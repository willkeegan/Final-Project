{"version":3,"sources":["components/Dashboard/Dashboard.js","components/Login/Login.js","components/Preferences/Preferences.js","components/App/App.js","components/App/useToken.js","reportWebVitals.js","index.js"],"names":["Dashboard","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","useState","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","className","onSubmit","type","onChange","target","value","Preferences","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","setItem","useToken","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEe,SAASA,IACtB,OACE,2C,mDCAWC,E,8EAAf,WAAyBC,GAAzB,SAAAC,EAAA,+EACSC,MAAM,8BAA+B,CAC1CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAEpBQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,WARvB,4C,sBAWe,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC9B,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,uCAAG,WAAMC,GAAN,eAAAlB,EAAA,6DACnBkB,EAAEC,iBADiB,SAECrB,EAAU,CAC5Be,WACAE,aAJiB,OAEbK,EAFa,OAMnBT,EAASS,GANU,2CAAH,sDASlB,OACE,sBAAKC,UAAU,gBAAf,UACE,+CACA,uBAAMC,SAAUL,EAAhB,UACE,kCACE,yCACA,uBAAOM,KAAK,OAAOC,SAAU,SAAAN,GAAC,OAAIJ,EAAYI,EAAEO,OAAOC,aAEzD,kCACE,yCACA,uBAAOH,KAAK,WAAWC,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOC,aAE7D,8BACE,wBAAQH,KAAK,SAAb,4BCvCK,SAASI,IACtB,OACE,6CC6BWC,MAzBf,WAEE,MCRa,WACb,IAMA,EAA0BhB,mBANT,WACf,IAAMiB,EAAcC,eAAeC,QAAQ,SACrCC,EAAY3B,KAAK4B,MAAMJ,GAC7B,cAAOG,QAAP,IAAOA,OAAP,EAAOA,EAAWZ,MAGec,IAAnC,mBAAOd,EAAP,KAAcT,EAAd,KAOA,MAAO,CACLA,SANgB,SAAAqB,GAChBF,eAAeK,QAAQ,QAAS9B,KAAKC,UAAU0B,IAC/CrB,EAASqB,EAAUZ,QAKnBA,SDR0BgB,GAApBhB,EAAR,EAAQA,MAAOT,EAAf,EAAeA,SAEf,OAAIS,EAKF,sBAAKC,UAAU,UAAf,UACE,6CACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,aAAZ,SACE,cAACxC,EAAD,MAEF,cAAC,IAAD,CAAOwC,KAAK,eAAZ,SACE,cAACV,EAAD,cAZD,cAAC,EAAD,CAAOhB,SAAUA,KEDb2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5885a06d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Dashboard() {\n  return(\n    <h2>Dashboard</h2>\n  );\n}\n","import React, { useState } from 'react';\nimport './Login.css';\nimport PropTypes from 'prop-types';\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n }\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Please Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Username</p>\n          <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\n        </label>\n        <label>\n          <p>Password</p>\n          <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n        </label>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Login from '../Login/Login';\nimport Preferences from '../Preferences/Preferences';\nimport useToken from './useToken';\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Application</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/preferences\">\n            <Preferences />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}