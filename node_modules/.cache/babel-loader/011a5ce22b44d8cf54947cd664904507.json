{"ast":null,"code":"import _slicedToArray from\"/Users/willkeegan/Library/Mobile Documents/com~apple~CloudDocs/Comp 426/comp426-cli/Final Project/login-page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';export default function useToken(){var getToken=function getToken(){var tokenString=sessionStorage.getItem('token');var userToken=JSON.parse(tokenString);return userToken===null||userToken===void 0?void 0:userToken.token;};var _useState=useState(getToken()),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var saveToken=function saveToken(userToken){sessionStorage.setItem('token',JSON.stringify(userToken));setToken(userToken.token);};return{setToken:saveToken,token:token};}","map":{"version":3,"sources":["/Users/willkeegan/Library/Mobile Documents/com~apple~CloudDocs/Comp 426/comp426-cli/Final Project/login-page/src/components/App/useToken.js"],"names":["useState","useToken","getToken","tokenString","sessionStorage","getItem","userToken","JSON","parse","token","setToken","saveToken","setItem","stringify"],"mappings":"mOAAA,OAASA,QAAT,KAAyB,OAAzB,CAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,WAAW,CAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAApB,CACA,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAlB,CACA,MAAOG,CAAAA,SAAP,SAAOA,SAAP,iBAAOA,SAAS,CAAEG,KAAlB,CACD,CAJD,CAMA,cAA0BT,QAAQ,CAACE,QAAQ,EAAT,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAL,SAAS,CAAI,CAC7BF,cAAc,CAACQ,OAAf,CAAuB,OAAvB,CAAgCL,IAAI,CAACM,SAAL,CAAeP,SAAf,CAAhC,EACAI,QAAQ,CAACJ,SAAS,CAACG,KAAX,CAAR,CACD,CAHD,CAKA,MAAO,CACLC,QAAQ,CAAEC,SADL,CAELF,KAAK,CAALA,KAFK,CAAP,CAID","sourcesContent":["import { useState } from 'react';\n\nexport default function useToken() {\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  };\n\n  const [token, setToken] = useState(getToken());\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    setToken(userToken.token);\n  };\n\n  return {\n    setToken: saveToken,\n    token\n  }\n}"]},"metadata":{},"sourceType":"module"}